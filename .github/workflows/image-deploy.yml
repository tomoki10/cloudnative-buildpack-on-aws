name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  builder: "paketobuildpacks/builder-jammy-base"
  pack_version: "0.33.1"
  ecr_repo_name: "cloudnative-buildpack-sample"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up environment variables
        run: |
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c 1-7)
          ECR_DOMAIN="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com"
          ECR_REPOSITORY="$ECR_DOMAIN/${{ env.ecr_repo_name }}"
          IMAGE_TAG="$ECR_REPOSITORY:$COMMIT_HASH"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      - name: Install pack
        run: |
          wget -q https://github.com/buildpacks/pack/releases/download/v${{ env.pack_version }}/pack-v${{ env.pack_version }}-linux.tgz -O - | tar -xz
          chmod +x ./pack

      - name: Build and push Docker image
        run: |
          ./pack build $IMAGE_TAG --no-color --builder ${{ env.builder }} \
            --path src/my-app \
            --tag $IMAGE_TAG \
            --publish

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: ECS Deploy
        run: |
          npx cdk deploy "EcsStack" -c imageTag=$COMMIT_HASH --require-approval never
